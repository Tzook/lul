'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const master_model_1 = require("../master/master.model");
const mongoose = require("mongoose");
const stats_model_1 = require("../stats/stats.model");
const QUEST_SCHEMA = {
    key: String,
    cond: {
        loot: mongoose.Schema.Types.Mixed,
        hunt: mongoose.Schema.Types.Mixed,
    },
    req: {
        class: String,
        lvl: Number,
        quests: mongoose.Schema.Types.Mixed
    },
    reward: {
        items: mongoose.Schema.Types.Mixed,
        class: String,
        exp: Number,
        stats: stats_model_1.BASE_STATS_SCHEMA,
        ability: String
    }
};
const CHAR_QUESTS = {
    progress: {},
    done: {},
    hunt: {},
};
class QuestsModel extends master_model_1.default {
    init(files, app) {
        this.controller = files.controller;
        this.schema = QUEST_SCHEMA;
        this.minimize = true;
    }
    get priority() {
        return 35;
    }
    createModel() {
        this.setModel("Quest");
        let CharQuestModel = this.createNewModel("CharQuest", CHAR_QUESTS, { _id: false, strict: false, minimize: false });
        this.addToSchema("Character", { quests: CharQuestModel.schema });
        this.listenForFieldAddition("Character", "quests", CHAR_QUESTS);
        setTimeout(() => this.controller.warmQuestsInfo());
        return Promise.resolve();
    }
}
exports.default = QuestsModel;
;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci9saWIvcXVlc3RzL3F1ZXN0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBQ2IseURBQWlEO0FBRWpELHFDQUFxQztBQUNyQyxzREFBeUQ7QUFFekQsTUFBTSxZQUFZLEdBQUc7SUFDakIsR0FBRyxFQUFFLE1BQU07SUFDWCxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztRQUNqQyxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztLQUNwQztJQUNELEdBQUcsRUFBRTtRQUNELEtBQUssRUFBRSxNQUFNO1FBQ2IsR0FBRyxFQUFFLE1BQU07UUFDWCxNQUFNLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztLQUN0QztJQUNELE1BQU0sRUFBRTtRQUNKLEtBQUssRUFBRSxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLO1FBQ2xDLEtBQUssRUFBRSxNQUFNO1FBQ2IsR0FBRyxFQUFFLE1BQU07UUFDWCxLQUFLLEVBQUUsK0JBQWlCO1FBQ3hCLE9BQU8sRUFBRSxNQUFNO0tBQ2xCO0NBQ0osQ0FBQztBQUVGLE1BQU0sV0FBVyxHQUFHO0lBQ2hCLFFBQVEsRUFBRSxFQUFFO0lBQ1osSUFBSSxFQUFFLEVBQUU7SUFDUixJQUFJLEVBQUUsRUFBRTtDQUNYLENBQUM7QUFFRixpQkFBaUMsU0FBUSxzQkFBVztJQUdoRCxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUc7UUFDWCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7UUFFbkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxZQUFZLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksUUFBUTtRQUNSLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDZCxDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFdkIsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLEVBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO1FBQ2pILElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLEVBQUMsTUFBTSxFQUFFLGNBQWMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBRWhFLFVBQVUsQ0FBQyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztRQUNuRCxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzdCLENBQUM7Q0FDSjtBQXhCRCw4QkF3QkM7QUFBQSxDQUFDIiwiZmlsZSI6ImxpYi9xdWVzdHMvcXVlc3RzLm1vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IE1hc3Rlck1vZGVsIGZyb20gJy4uL21hc3Rlci9tYXN0ZXIubW9kZWwnO1xuaW1wb3J0IFF1ZXN0c0NvbnRyb2xsZXIgZnJvbSBcIi4vcXVlc3RzLmNvbnRyb2xsZXJcIjtcbmltcG9ydCAqIGFzIG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7IEJBU0VfU1RBVFNfU0NIRU1BIH0gZnJvbSBcIi4uL3N0YXRzL3N0YXRzLm1vZGVsXCI7XG5cbmNvbnN0IFFVRVNUX1NDSEVNQSA9IHtcbiAgICBrZXk6IFN0cmluZyxcbiAgICBjb25kOiB7XG4gICAgICAgIGxvb3Q6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5NaXhlZCxcbiAgICAgICAgaHVudDogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk1peGVkLFxuICAgIH0sXG4gICAgcmVxOiB7XG4gICAgICAgIGNsYXNzOiBTdHJpbmcsXG4gICAgICAgIGx2bDogTnVtYmVyLFxuICAgICAgICBxdWVzdHM6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5NaXhlZFxuICAgIH0sXG4gICAgcmV3YXJkOiB7XG4gICAgICAgIGl0ZW1zOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuTWl4ZWQsXG4gICAgICAgIGNsYXNzOiBTdHJpbmcsXG4gICAgICAgIGV4cDogTnVtYmVyLFxuICAgICAgICBzdGF0czogQkFTRV9TVEFUU19TQ0hFTUEsXG4gICAgICAgIGFiaWxpdHk6IFN0cmluZ1xuICAgIH1cbn07XG5cbmNvbnN0IENIQVJfUVVFU1RTID0ge1xuICAgIHByb2dyZXNzOiB7fSxcbiAgICBkb25lOiB7fSxcbiAgICBodW50OiB7fSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1ZXN0c01vZGVsIGV4dGVuZHMgTWFzdGVyTW9kZWwge1xuICAgIHByb3RlY3RlZCBjb250cm9sbGVyOiBRdWVzdHNDb250cm9sbGVyO1xuXG4gICAgaW5pdChmaWxlcywgYXBwKSB7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IGZpbGVzLmNvbnRyb2xsZXI7XG5cbiAgICAgICAgdGhpcy5zY2hlbWEgPSBRVUVTVF9TQ0hFTUE7XG4gICAgICAgIHRoaXMubWluaW1pemUgPSB0cnVlO1xuICAgIH1cblxuICAgIGdldCBwcmlvcml0eSgpIHtcbiAgICAgICAgcmV0dXJuIDM1O1xuICAgIH1cblxuICAgIGNyZWF0ZU1vZGVsKCkge1xuICAgICAgICB0aGlzLnNldE1vZGVsKFwiUXVlc3RcIik7XG5cbiAgICAgICAgbGV0IENoYXJRdWVzdE1vZGVsID0gdGhpcy5jcmVhdGVOZXdNb2RlbChcIkNoYXJRdWVzdFwiLCBDSEFSX1FVRVNUUywge19pZDogZmFsc2UsIHN0cmljdDogZmFsc2UsIG1pbmltaXplOiBmYWxzZX0pO1xuICAgICAgICB0aGlzLmFkZFRvU2NoZW1hKFwiQ2hhcmFjdGVyXCIsIHtxdWVzdHM6IENoYXJRdWVzdE1vZGVsLnNjaGVtYX0pO1xuICAgICAgICB0aGlzLmxpc3RlbkZvckZpZWxkQWRkaXRpb24oXCJDaGFyYWN0ZXJcIiwgXCJxdWVzdHNcIiwgQ0hBUl9RVUVTVFMpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5jb250cm9sbGVyLndhcm1RdWVzdHNJbmZvKCkpOyAvLyB0aW1lb3V0IHNvIHRoZSBNb2RlbCBjYW4gYmUgc2V0XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59OyJdfQ==
