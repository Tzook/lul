'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
let config = require('../../../server/lib/master/master.config.json');
const STATUS_CODES = config.STATUS_CODES;
class Response {
    init(files, app) {
        this.services = files.services;
        this.LOGS = Object.assign({}, files.config.LOGS, config.LOGS);
    }
    sendError(res, ERROR, tokens) {
        return this.services.replaceTokens(ERROR.MSG, tokens)
            .then(error => {
            console.error("Sending an error:", error);
            res.status(STATUS_CODES[ERROR.STATUS]).send({ code: ERROR.CODE, error });
        });
    }
    sendData(res, SUCCESS, data) {
        let body = { code: SUCCESS.CODE, msg: SUCCESS.MSG };
        data && (body.data = data);
        console.info("Sending body", body);
        res.status(STATUS_CODES[SUCCESS.STATUS]).send(body);
    }
}
exports.default = Response;
;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci9saWIvbWFzdGVyL21hc3Rlci5yZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBQ2IsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLCtDQUErQyxDQUFDLENBQUM7QUFDdEUsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztBQUV6QztJQUlJLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVTLFNBQVMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLE1BQU87UUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDO2FBQ3BELElBQUksQ0FBQyxLQUFLO1lBQ1AsT0FBTyxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUMxQyxHQUFHLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVTLFFBQVEsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUs7UUFDbEMsSUFBSSxJQUFJLEdBQU8sRUFBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBQyxDQUFDO1FBQ3RELElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDM0IsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbkMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hELENBQUM7Q0FDSjtBQXZCRCwyQkF1QkM7QUFBQSxDQUFDIiwiZmlsZSI6ImxpYi9tYXN0ZXIvbWFzdGVyLnJlc3BvbnNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubGV0IGNvbmZpZyA9IHJlcXVpcmUoJy4uLy4uLy4uL3NlcnZlci9saWIvbWFzdGVyL21hc3Rlci5jb25maWcuanNvbicpO1xuY29uc3QgU1RBVFVTX0NPREVTID0gY29uZmlnLlNUQVRVU19DT0RFUztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzcG9uc2Uge1xuICAgIHByb3RlY3RlZCBzZXJ2aWNlcztcbiAgICBwcm90ZWN0ZWQgTE9HUztcblxuICAgIGluaXQoZmlsZXMsIGFwcCkge1xuXHRcdHRoaXMuc2VydmljZXMgPSBmaWxlcy5zZXJ2aWNlcztcblx0XHR0aGlzLkxPR1MgPSBPYmplY3QuYXNzaWduKHt9LCBmaWxlcy5jb25maWcuTE9HUywgY29uZmlnLkxPR1MpOyAvLyBtZXJnZSBNQVNURVIgbG9ncyBpbnRvIHRoZSBpbnN0YW5jZSBsb2dzXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHNlbmRFcnJvcihyZXMsIEVSUk9SLCB0b2tlbnM/KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2VzLnJlcGxhY2VUb2tlbnMoRVJST1IuTVNHLCB0b2tlbnMpXG4gICAgICAgIC50aGVuKGVycm9yID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJTZW5kaW5nIGFuIGVycm9yOlwiLCBlcnJvcik7XG4gICAgICAgICAgICByZXMuc3RhdHVzKFNUQVRVU19DT0RFU1tFUlJPUi5TVEFUVVNdKS5zZW5kKHtjb2RlOiBFUlJPUi5DT0RFLCBlcnJvcn0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc2VuZERhdGEocmVzLCBTVUNDRVNTLCBkYXRhPykge1xuICAgICAgICBsZXQgYm9keTphbnkgPSB7Y29kZTogU1VDQ0VTUy5DT0RFLCBtc2c6IFNVQ0NFU1MuTVNHfTtcbiAgICAgICAgZGF0YSAmJiAoYm9keS5kYXRhID0gZGF0YSk7XG4gICAgICAgIGNvbnNvbGUuaW5mbyhcIlNlbmRpbmcgYm9keVwiLCBib2R5KTtcbiAgICAgICAgcmVzLnN0YXR1cyhTVEFUVVNfQ09ERVNbU1VDQ0VTUy5TVEFUVVNdKS5zZW5kKGJvZHkpO1xuICAgIH1cbn07Il19
