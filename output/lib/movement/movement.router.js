'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const socketio_router_base_1 = require("../socketio/socketio.router.base");
let SERVER_GETS = require('../../../server/lib/movement/movement.config.json').SERVER_GETS;
class MovementRouter extends socketio_router_base_1.default {
    [SERVER_GETS.MOVEMENT.name](data, socket) {
        var position = socket.character.position;
        position.x = data.x;
        position.y = data.y;
        position.z = data.z;
        if (socket.test) {
            console.log("movement", data, socket.character.name);
        }
        socket.broadcast.to(socket.character.room).emit(this.CLIENT_GETS.MOVEMENT.name, {
            id: socket.character._id,
            x: data.x,
            y: data.y,
            z: data.z,
            angle: data.angle
        });
    }
    [SERVER_GETS.START_CLIMB.name](data, socket) {
        socket.character.position.climbing = true;
        socket.broadcast.to(socket.character.room).emit(this.CLIENT_GETS.START_CLIMB.name, {
            id: socket.character._id,
        });
    }
    [SERVER_GETS.STOP_CLIMB.name](data, socket) {
        socket.character.position.climbing = false;
        socket.broadcast.to(socket.character.room).emit(this.CLIENT_GETS.STOP_CLIMB.name, {
            id: socket.character._id,
        });
    }
}
exports.default = MovementRouter;
;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci9saWIvbW92ZW1lbnQvbW92ZW1lbnQucm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFDYiwyRUFBa0U7QUFDbEUsSUFBSSxXQUFXLEdBQU8sT0FBTyxDQUFDLG1EQUFtRCxDQUFDLENBQUMsV0FBVyxDQUFDO0FBRS9GLG9CQUFvQyxTQUFRLDhCQUFrQjtJQUM3RCxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLE1BQWtCO1FBQ25ELElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDO1FBQ3pDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQixRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDcEIsUUFBUSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFDRCxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDL0UsRUFBRSxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRztZQUN4QixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDVCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDVCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7U0FDakIsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUVELENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsTUFBa0I7UUFDdEQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUMxQyxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUU7WUFDbEYsRUFBRSxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRztTQUN4QixDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxNQUFrQjtRQUNyRCxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRTtZQUNqRixFQUFFLEVBQUUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHO1NBQ3hCLENBQUMsQ0FBQztJQUNKLENBQUM7Q0FDRDtBQS9CRCxpQ0ErQkM7QUFBQSxDQUFDIiwiZmlsZSI6ImxpYi9tb3ZlbWVudC9tb3ZlbWVudC5yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgU29ja2V0aW9Sb3V0ZXJCYXNlIGZyb20gJy4uL3NvY2tldGlvL3NvY2tldGlvLnJvdXRlci5iYXNlJztcbmxldCBTRVJWRVJfR0VUU1x0XHQgICA9IHJlcXVpcmUoJy4uLy4uLy4uL3NlcnZlci9saWIvbW92ZW1lbnQvbW92ZW1lbnQuY29uZmlnLmpzb24nKS5TRVJWRVJfR0VUUztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW92ZW1lbnRSb3V0ZXIgZXh0ZW5kcyBTb2NrZXRpb1JvdXRlckJhc2Uge1xuXHRbU0VSVkVSX0dFVFMuTU9WRU1FTlQubmFtZV0oZGF0YSwgc29ja2V0OiBHYW1lU29ja2V0KSB7XG5cdFx0dmFyIHBvc2l0aW9uID0gc29ja2V0LmNoYXJhY3Rlci5wb3NpdGlvbjtcblx0XHRwb3NpdGlvbi54ID0gZGF0YS54O1xuXHRcdHBvc2l0aW9uLnkgPSBkYXRhLnk7XG5cdFx0cG9zaXRpb24ueiA9IGRhdGEuejtcblx0XHRpZiAoc29ja2V0LnRlc3QpIHtcblx0XHRcdGNvbnNvbGUubG9nKFwibW92ZW1lbnRcIiwgZGF0YSwgc29ja2V0LmNoYXJhY3Rlci5uYW1lKTtcblx0XHR9XG5cdFx0c29ja2V0LmJyb2FkY2FzdC50byhzb2NrZXQuY2hhcmFjdGVyLnJvb20pLmVtaXQodGhpcy5DTElFTlRfR0VUUy5NT1ZFTUVOVC5uYW1lLCB7XG5cdFx0XHRpZDogc29ja2V0LmNoYXJhY3Rlci5faWQsXG5cdFx0XHR4OiBkYXRhLngsXG5cdFx0XHR5OiBkYXRhLnksXG5cdFx0XHR6OiBkYXRhLnosXG5cdFx0XHRhbmdsZTogZGF0YS5hbmdsZVxuXHRcdH0pO1xuXHR9XG5cblx0W1NFUlZFUl9HRVRTLlNUQVJUX0NMSU1CLm5hbWVdKGRhdGEsIHNvY2tldDogR2FtZVNvY2tldCkge1xuXHRcdHNvY2tldC5jaGFyYWN0ZXIucG9zaXRpb24uY2xpbWJpbmcgPSB0cnVlO1xuXHRcdHNvY2tldC5icm9hZGNhc3QudG8oc29ja2V0LmNoYXJhY3Rlci5yb29tKS5lbWl0KHRoaXMuQ0xJRU5UX0dFVFMuU1RBUlRfQ0xJTUIubmFtZSwge1xuXHRcdFx0aWQ6IHNvY2tldC5jaGFyYWN0ZXIuX2lkLFxuXHRcdH0pO1xuXHR9XG5cblx0W1NFUlZFUl9HRVRTLlNUT1BfQ0xJTUIubmFtZV0oZGF0YSwgc29ja2V0OiBHYW1lU29ja2V0KSB7XG5cdFx0c29ja2V0LmNoYXJhY3Rlci5wb3NpdGlvbi5jbGltYmluZyA9IGZhbHNlO1xuXHRcdHNvY2tldC5icm9hZGNhc3QudG8oc29ja2V0LmNoYXJhY3Rlci5yb29tKS5lbWl0KHRoaXMuQ0xJRU5UX0dFVFMuU1RPUF9DTElNQi5uYW1lLCB7XG5cdFx0XHRpZDogc29ja2V0LmNoYXJhY3Rlci5faWQsXG5cdFx0fSk7XG5cdH1cbn07Il19
