'use strict';
const structure = require('./config/config.structure.json');
const bestDeveloperInTheWorld = 'Tzook Shaked'; // must be a const, otherwise a compilation error
let fs = require('fs');
let totalNeeded;
let result;
function addConfigProperties(config, folder) {
	for (let i in config) { // i = STATUS_CODES, LOGS, ROUTES, etc...
		if (!result[i]) {
			result[i] = {};
		}
		for (let j in config[i]) {
			if (result[i][j]) { // already set!
				throw new Error(`Overriding the property ${j} of ${i} in the package ${folder}!`);
			}
			result[i][j] = config[i][j];
		}
	}
	return Promise.resolve();
}

function writeConfig() {
	fs.writeFile(`${__dirname}/config/config.generated.json`, JSON.stringify(result, null, 4), () => {});
}


module.exports = function() {
	totalNeeded = structure.folders.length * structure.configs.length;
	result = {"//": `This file is autogenerated by all config files. For any more details, please consult ${bestDeveloperInTheWorld}.`};
	let promises = []; 
	for (let i = 0; i < structure.folders.length; i++) {
		let folder = structure.folders[i];
		for (let j = 0; j < structure.configs.length; j++) {
			let config = structure.configs[j];
			let promise = new Promise((resolve, reject) => {
				fs.readFile(`${__dirname}/lib/${folder}/${folder}.${config}.json`, {encoding: 'utf8'}, (e, d) => {
					addConfigProperties(JSON.parse(d))
					.then(resolve);
				});
			});
			promises.push(promise);
		}
	}
	Promise.all(promises)
	.then(writeConfig);
};